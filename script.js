// –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ localStorage
const currentUser = JSON.parse(localStorage.getItem('currentUser')) || null;
const isAdmin = currentUser?.role === 'admin';

// –ú–∞—Å–∏–≤ —Ç–æ–≤–∞—Ä—ñ–≤ (–∞–±–æ –æ—Ç—Ä–∏–º—É—î–º–æ –∑ localStorage)
let products = JSON.parse(localStorage.getItem('products')) || [
  { id: 1, name: "Nike Air Max", price: 3000, category: "–ß–æ–ª–æ–≤—ñ—á–µ", image: "images/shoe.jpg" },
  { id: 2, name: "Adidas Superstar", price: 2800, category: "–ñ—ñ–Ω–æ—á–µ", image: "images/shoe.jpg" },
  { id: 3, name: "Puma Classic", price: 2500, category: "–£–Ω—ñ—Å–µ–∫—Å", image: "images/shoe.jpg" },
  { id: 4, name: "Reebok Runner", price: 2200, category: "–ß–æ–ª–æ–≤—ñ—á–µ", image: "images/shoe.jpg" },
  { id: 5, name: "New Balance 574", price: 2700, category: "–ñ—ñ–Ω–æ—á–µ", image: "images/shoe.jpg" }
];

// –û–Ω–æ–≤–ª—é—î–º–æ localStorage
localStorage.setItem('products', JSON.stringify(products));

const productList = document.getElementById("productList");
const categoryFilter = document.getElementById("categoryFilter");
const sortOrder = document.getElementById("sortOrder");
const adminControls = document.getElementById("adminControls");
const addProductBtn = document.getElementById("addProductBtn");

// –ü–æ–∫–∞–∑—É—î–º–æ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å, —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–¥–º—ñ–Ω
if (isAdmin) {
  adminControls.style.display = 'block';
  // –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤ —Ö–µ–¥–µ—Ä—ñ
  document.querySelector('nav a[href="login.html"]').textContent = '–í–∏–π—Ç–∏';
}

function renderProducts(list) {
  productList.innerHTML = "";
  list.forEach(product => {
    const card = document.createElement("div");
    card.classList.add("product");

    // –î–æ–¥–∞—î–º–æ –∞–¥–º—ñ–Ω-–∫–Ω–æ–ø–∫–∏, —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–¥–º—ñ–Ω
    const adminButtons = isAdmin ? `
      <div class="admin-controls">
        <button class="admin-btn edit-btn" onclick="editProduct(${product.id})">‚úèÔ∏è</button>
        <button class="admin-btn delete-btn" onclick="deleteProduct(${product.id})">üóëÔ∏è</button>
      </div>
    ` : '';

    card.innerHTML = `
      ${adminButtons}
      <img src="${product.image}" alt="${product.name}">
      <h3>${product.name}</h3>
      <p>${product.price} –≥—Ä–Ω</p>
      <a href="product.html?id=${product.id}" class="view-btn">–î–µ—Ç–∞–ª—ñ</a>
      <button onclick="addToCart(${product.id})">–î–æ –∫–æ—à–∏–∫–∞</button>
    `;

    productList.appendChild(card);
  });
}

function filterAndSortProducts() {
  let filtered = [...products];

  const category = categoryFilter.value;
  if (category !== "all") {
    filtered = filtered.filter(p => p.category === category);
  }

  const sort = sortOrder.value;
  if (sort === "priceAsc") {
    filtered.sort((a, b) => a.price - b.price);
  } else if (sort === "priceDesc") {
    filtered.sort((a, b) => b.price - a.price);
  }

  renderProducts(filtered);
}

function addToCart(productId) {
  let cart = JSON.parse(localStorage.getItem("cart")) || [];
  cart.push(productId);
  localStorage.setItem("cart", JSON.stringify(cart));
  updateCartCount();
  alert("–¢–æ–≤–∞—Ä –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—à–∏–∫–∞!");
}

function updateCartCount() {
  const cart = JSON.parse(localStorage.getItem("cart")) || [];
  document.getElementById("cart-count").textContent = cart.length;
}

// –ê–¥–º—ñ–Ω-—Ñ—É–Ω–∫—Ü—ñ—ó
function deleteProduct(id) {
  if (confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π —Ç–æ–≤–∞—Ä?')) {
    products = products.filter(p => p.id !== id);
    localStorage.setItem('products', JSON.stringify(products));
    filterAndSortProducts();
  }
}

function editProduct(id) {
  const product = products.find(p => p.id === id);
  if (!product) return;

  const newName = prompt('–ù–æ–≤–∞ –Ω–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É:', product.name);
  if (newName === null) return;

  const newPrice = prompt('–ù–æ–≤–∞ —Ü—ñ–Ω–∞:', product.price);
  if (newPrice === null) return;

  const newCategory = prompt('–ù–æ–≤–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è (–ß–æ–ª–æ–≤—ñ—á–µ/–ñ—ñ–Ω–æ—á–µ/–£–Ω—ñ—Å–µ–∫—Å):', product.category);
  if (newCategory === null) return;

  product.name = newName;
  product.price = parseInt(newPrice);
  product.category = newCategory;

  localStorage.setItem('products', JSON.stringify(products));
  filterAndSortProducts();
}

addProductBtn.addEventListener('click', () => {
  const id = products.length > 0 ? Math.max(...products.map(p => p.id)) + 1 : 1;
  const name = prompt('–ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É:');
  if (!name) return;

  const price = prompt('–¶—ñ–Ω–∞:');
  if (!price) return;

  const category = prompt('–ö–∞—Ç–µ–≥–æ—Ä—ñ—è (–ß–æ–ª–æ–≤—ñ—á–µ/–ñ—ñ–Ω–æ—á–µ/–£–Ω—ñ—Å–µ–∫—Å):');
  if (!category) return;

  const newProduct = {
    id,
    name,
    price: parseInt(price),
    category,
    image: "images/shoe.jpg" // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
  };

  products.push(newProduct);
  localStorage.setItem('products', JSON.stringify(products));
  filterAndSortProducts();
});

// –ü–æ–¥—ñ—ó —Ñ—ñ–ª—å—Ç—Ä–∞ —Ç–∞ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
categoryFilter.addEventListener("change", filterAndSortProducts);
sortOrder.addEventListener("change", filterAndSortProducts);

// –ü–æ—á–∞—Ç–∫–æ–≤–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
document.addEventListener("DOMContentLoaded", () => {
  renderProducts(products);
  updateCartCount();
});