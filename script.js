// –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ localStorage
const currentUser = JSON.parse(localStorage.getItem('currentUser')) || null;
const isAdmin = currentUser?.role === 'admin';

// –ú–∞—Å–∏–≤ —Ç–æ–≤–∞—Ä—ñ–≤ (–∞–±–æ –æ—Ç—Ä–∏–º—É—î–º–æ –∑ localStorage)
let products = JSON.parse(localStorage.getItem('products')) || [
  { 
    id: 1, 
    name: "Nike Air Max", 
    price: 3000, 
    category: "–ß–æ–ª–æ–≤—ñ—á–µ", 
    image: "images/shoe.jpg",
    description: "–ö–ª–∞—Å–∏—á–Ω—ñ –∫—Ä–æ—Å—ñ–≤–∫–∏ –∑ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—î—é Air Max –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç—É –ø—Ä–æ—Ç—è–≥–æ–º —É—Å—å–æ–≥–æ –¥–Ω—è. –Ü–¥–µ–∞–ª—å–Ω—ñ –¥–ª—è –ø–æ–≤—Å—è–∫–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ—Å—ñ–Ω–Ω—è —Ç–∞ —Å–ø–æ—Ä—Ç–∏–≤–Ω–∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π."
  },
  { 
    id: 2, 
    name: "Adidas Superstar", 
    price: 2800, 
    category: "–ñ—ñ–Ω–æ—á–µ", 
    image: "images/shoe.jpg",
    description: "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ñ –∫—Ä–æ—Å—ñ–≤–∫–∏ –∑ –º—ñ—Ü–Ω–æ—é —à–∫—ñ—Ä—è–Ω–æ—é –≤–µ—Ä—Ö–Ω—å–æ—é —á–∞—Å—Ç–∏–Ω–æ—é —Ç–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω–∏–º —Ä–∞–∫—É—à–∫–æ–ø–æ–¥—ñ–±–Ω–∏–º –Ω–æ—Å–æ–º. –°—Ç–∏–ª—å, —è–∫–∏–π –Ω—ñ–∫–æ–ª–∏ –Ω–µ –≤–∏—Ö–æ–¥–∏—Ç—å –∑ –º–æ–¥–∏."
  },
  { 
    id: 3, 
    name: "Puma Classic", 
    price: 2500, 
    category: "–£–Ω—ñ—Å–µ–∫—Å", 
    image: "images/shoe.jpg",
    description: "–£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω—ñ –∫—Ä–æ—Å—ñ–≤–∫–∏ –¥–ª—è —á–æ–ª–æ–≤—ñ–∫—ñ–≤ —Ç–∞ –∂—ñ–Ω–æ–∫. –õ–µ–≥–∫—ñ, –∑—Ä—É—á–Ω—ñ —Ç–∞ —Å—Ç–∏–ª—å–Ω—ñ - —ñ–¥–µ–∞–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä –¥–ª—è –º—ñ—Å—å–∫–æ–≥–æ —Å—Ç–∏–ª—é."
  },
  { 
    id: 4, 
    name: "Reebok Runner", 
    price: 2200, 
    category: "–ß–æ–ª–æ–≤—ñ—á–µ", 
    image: "images/shoe.jpg",
    description: "–ë—ñ–≥–æ–≤—ñ –∫—Ä–æ—Å—ñ–≤–∫–∏ –∑ –ø—ñ–¥–≤–∏—â–µ–Ω–æ—é –∞–º–æ—Ä—Ç–∏–∑–∞—Ü—ñ—î—é. –ó–∞–±–µ–∑–ø–µ—á—É—é—Ç—å –≤—ñ–¥–º—ñ–Ω–Ω—É –ø—ñ–¥—Ç—Ä–∏–º–∫—É –ø—ñ–¥ —á–∞—Å —Ç—Ä–µ–Ω—É–≤–∞–Ω—å."
  },
  { 
    id: 5, 
    name: "New Balance 574", 
    price: 2700, 
    category: "–ñ—ñ–Ω–æ—á–µ", 
    image: "images/shoe.jpg",
    description: "–ö—É–ª—å—Ç–æ–≤—ñ –∫—Ä–æ—Å—ñ–≤–∫–∏ –∑ —è–∫—ñ—Å–Ω–∏—Ö –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤. –ü–æ—î–¥–Ω—É—é—Ç—å –≤ —Å–æ–±—ñ —Ä–µ—Ç—Ä–æ-—Å—Ç–∏–ª—å —ñ —Å—É—á–∞—Å–Ω–∏–π –∫–æ–º—Ñ–æ—Ä—Ç."
  }
];

// –û–Ω–æ–≤–ª—é—î–º–æ localStorage
localStorage.setItem('products', JSON.stringify(products));

const productList = document.getElementById("productList");
const categoryFilter = document.getElementById("categoryFilter");
const sortOrder = document.getElementById("sortOrder");
const adminControls = document.getElementById("adminControls");
const addProductBtn = document.getElementById("addProductBtn");

// –ü–æ–∫–∞–∑—É—î–º–æ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å, —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–¥–º—ñ–Ω
if (isAdmin) {
  adminControls.style.display = 'block';
  const loginLink = document.querySelector('nav a[href="login.html"]');
  if (loginLink) {
    loginLink.textContent = '–í–∏–π—Ç–∏';
    loginLink.addEventListener('click', (e) => {
      e.preventDefault();
      localStorage.removeItem('currentUser');
      window.location.href = 'login.html';
    });
  }
}

function renderProducts(list) {
  productList.innerHTML = "";
  list.forEach(product => {
    const card = document.createElement("div");
    card.classList.add("product");

    const adminButtons = isAdmin ? `
      <div class="admin-controls">
        <button class="admin-btn edit-btn" onclick="editProduct(${product.id})">‚úèÔ∏è</button>
        <button class="admin-btn delete-btn" onclick="deleteProduct(${product.id})">üóëÔ∏è</button>
      </div>
    ` : '';

    card.innerHTML = `
      ${adminButtons}
      <img src="${product.image}" alt="${product.name}">
      <h3>${product.name}</h3>
      <p>${product.price} –≥—Ä–Ω</p>
      <p class="category">${product.category}</p>
      <a href="product.html?id=${product.id}" class="view-btn">–î–µ—Ç–∞–ª—ñ</a>
      <button onclick="addToCart(${product.id})">–î–æ –∫–æ—à–∏–∫–∞</button>
    `;

    productList.appendChild(card);
  });
}

function filterAndSortProducts() {
  // –û—Ç—Ä–∏–º—É—î–º–æ –∞–∫—Ç—É–∞–ª—å–Ω–∏–π —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤ –∑ localStorage
  let filtered = JSON.parse(localStorage.getItem('products')) || [];
  
  // –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—î—é
  const category = categoryFilter.value;
  if (category !== "all") {
    filtered = filtered.filter(p => p.category === category);
  }

  // –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
  const sort = sortOrder.value;
  if (sort === "priceAsc") {
    filtered.sort((a, b) => a.price - b.price);
  } else if (sort === "priceDesc") {
    filtered.sort((a, b) => b.price - a.price);
  }

  renderProducts(filtered);
}

function addToCart(productId) {
  let cart = JSON.parse(localStorage.getItem("cart")) || [];
  const product = products.find(p => p.id === productId);
  
  if (product) {
    const existingItem = cart.find(item => item.id === product.id);
    
    if (existingItem) {
      existingItem.quantity = (existingItem.quantity || 1) + 1;
    } else {
      cart.push({
        id: product.id,
        name: product.name,
        price: product.price,
        image: product.image,
        quantity: 1
      });
    }
    
    localStorage.setItem("cart", JSON.stringify(cart));
    updateCartCount();
    alert("–¢–æ–≤–∞—Ä –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—à–∏–∫–∞!");
  }
}

function updateCartCount() {
  const cart = JSON.parse(localStorage.getItem("cart")) || [];
  const totalItems = cart.reduce((total, item) => total + (item.quantity || 1), 0);
  const cartCountElements = document.querySelectorAll("#cart-count");
  
  cartCountElements.forEach(element => {
    element.textContent = totalItems;
  });
}

// –ê–¥–º—ñ–Ω-—Ñ—É–Ω–∫—Ü—ñ—ó
function deleteProduct(id) {
  if (confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π —Ç–æ–≤–∞—Ä?')) {
    products = products.filter(p => p.id !== id);
    localStorage.setItem('products', JSON.stringify(products));
    filterAndSortProducts();
  }
}

function editProduct(id) {
  const product = products.find(p => p.id === id);
  if (!product) return;

  const newName = prompt('–ù–æ–≤–∞ –Ω–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É:', product.name);
  if (newName === null) return;

  const newPrice = prompt('–ù–æ–≤–∞ —Ü—ñ–Ω–∞:', product.price);
  if (newPrice === null) return;

  const newCategory = prompt('–ù–æ–≤–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è (–ß–æ–ª–æ–≤—ñ—á–µ/–ñ—ñ–Ω–æ—á–µ/–£–Ω—ñ—Å–µ–∫—Å):', product.category);
  if (newCategory === null) return;

  const newDescription = prompt('–ù–æ–≤–∏–π –æ–ø–∏—Å —Ç–æ–≤–∞—Ä—É:', product.description || '');
  if (newDescription === null) return;

  product.name = newName;
  product.price = parseInt(newPrice);
  product.category = newCategory;
  product.description = newDescription;

  localStorage.setItem('products', JSON.stringify(products));
  filterAndSortProducts();
}

addProductBtn?.addEventListener('click', () => {
  const id = products.length > 0 ? Math.max(...products.map(p => p.id)) + 1 : 1;
  const name = prompt('–ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É:');
  if (!name) return;

  const price = prompt('–¶—ñ–Ω–∞:');
  if (!price) return;

  const category = prompt('–ö–∞—Ç–µ–≥–æ—Ä—ñ—è (–ß–æ–ª–æ–≤—ñ—á–µ/–ñ—ñ–Ω–æ—á–µ/–£–Ω—ñ—Å–µ–∫—Å):');
  if (!category) return;

  const description = prompt('–û–ø–∏—Å —Ç–æ–≤–∞—Ä—É:');
  if (description === null) return; // –î–æ–∑–≤–æ–ª—è—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π –æ–ø–∏—Å

  const newProduct = {
    id,
    name,
    price: parseInt(price),
    category,
    description: description || '', // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π —Ä—è–¥–æ–∫, —è–∫—â–æ –æ–ø–∏—Å –Ω–µ –≤–≤–µ–¥–µ–Ω–æ
    image: "images/shoe.jpg"
  };

  products.push(newProduct);
  localStorage.setItem('products', JSON.stringify(products));
  filterAndSortProducts();
});

// –ü–æ–¥—ñ—ó —Ñ—ñ–ª—å—Ç—Ä–∞ —Ç–∞ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
categoryFilter?.addEventListener("change", filterAndSortProducts);
sortOrder?.addEventListener("change", filterAndSortProducts);

// –ü–æ—á–∞—Ç–∫–æ–≤–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
document.addEventListener("DOMContentLoaded", () => {
  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ –≥–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞
  if (document.getElementById('productList')) {
    renderProducts(products);
    updateCartCount();
  }
  
  // –û–Ω–æ–≤–ª—é—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –∫–æ—à–∏–∫–∞ –Ω–∞ –≤—Å—ñ—Ö —Å—Ç–æ—Ä—ñ–Ω–∫–∞—Ö
  updateCartCount();
});

// –î–æ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—ó –≤ –≥–ª–æ–±–∞–ª—å–Ω—É –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—ñ –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ HTML
window.addToCart = addToCart;
window.editProduct = editProduct;
window.deleteProduct = deleteProduct;